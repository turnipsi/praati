#!/usr/bin/perl -T
# -*- mode: perl; coding: utf-8; -*'
# $Id: praati,v 1.4 2014/02/23 16:35:02 je Exp $

use autodie;
use diagnostics;
use strict;
use utf8;
use warnings FATAL => qw(all);


#
# configurations
#

package Praati::Config {
  our $WWW_DIR = '/'; # XXX in OpenBSD Apache chroot only...

  our $DB_DIR       = 'db';
  our $DB_FILE_PATH = "${WWW_DIR}/${DB_DIR}/praati.sqlite3";

  our $MUSIC_PATH = "${DB_DIR}/music";
}


#
# model
#

package Praati::Model {
  use DBI;
  use Email::Valid;

  our $DB;

  sub init {
    my %attrs = (
      AutoCommit                       => 1,
      PrintError                       => 0, 
      RaiseError                       => 1,
      sqlite_allow_multiple_statements => 1,
    );
    $DB = DBI->connect("dbi:SQLite:dbname=${Praati::Config::DB_FILE_PATH}",
		       '',
		       '',
		       \%attrs);

    $DB->do('PRAGMA foreign_keys = ON');

    Praati::Model::SQLite::register_sqlite_functions();

    create_db_tables();
  }

  sub close {
    if ($DB) { $DB->disconnect(); }
  }

  sub create_db_tables {
    query(q{
      create table if not exists users (
        user_id                 integer      primary key not null,
        user_email              varchar(256) unique      not null
          check(check_user_email(user_email)),
        user_encrypted_password varchar(256)             not null,
        user_name               varchar(256) unique      not null,
        user_role               varchar(256)             not null
          check(user_role in ('admin', 'critic'))
      );
    });
  }

  sub check_user_email {
    my ($email_address) = @_;
    Email::Valid->address($email_address) ? 1 : 0;
  }

  sub query { $DB->do($_[0]); }
}

package Praati::Model::SQLite {
  sub register { $Praati::Model::DB->sqlite_create_function(@_); }

  sub register_sqlite_functions {
    register(check_user_email => 1, \&Praati::Model::check_user_email);
  }
}


#
# view
#

package Praati::View {

}


#
# controller
#

package Praati::Controller {
  use CGI;

  our $Q;

  sub main {
    $Q = CGI->new();

    eval {
      Praati::Model::init();

      print $Q->header(),
	    $Q->start_html(),
	    $Q->p('hello'),
	    $Q->end_html();
    };
    my $error = $@;

    Praati::Model::close();

    if ($error) {
      die $error;
    }
  }
}


package main {
  Praati::Controller::main(); 
}
